<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="5" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="93" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
    <groups>
      <group name="end-to-end">
        <method signature="FlowOfTestNG.method_a()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="method_a" class="test.FlowOfTestNG"/>
      </group> <!-- end-to-end -->
      <group name="smokeTest">
        <method signature="FlowOfTestNG.method_b()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="method_b" class="test.FlowOfTestNG"/>
      </group> <!-- smokeTest -->
    </groups>
    <test name="Test" duration-ms="93" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
      <class name="test.FlowOfTestNG">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="beforeSuite" is-config="true" duration-ms="14" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="beforeTest" is-config="true" duration-ms="3" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="beforeClass" is-config="true" duration-ms="0" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="method_a()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="method_a" duration-ms="8" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method_a -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="AfterMethod" is-config="true" duration-ms="4" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="method_a()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="method_a" duration-ms="2" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method_a -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="method_b()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="method_b" duration-ms="4" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method_b -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="method_c()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="method_c" duration-ms="5" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method_c -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="AfterMethod" is-config="true" duration-ms="3" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="method_d(java.lang.String, java.lang.String)[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="method_d" duration-ms="2" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gaurav]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Lad]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method_d -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="AfterMethod" is-config="true" duration-ms="1" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="afterClass" is-config="true" duration-ms="0" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="afterTest" is-config="true" duration-ms="0" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:test.FlowOfTestNG@4f933fd1]" name="afterSuite" is-config="true" duration-ms="1" started-at="2019-06-07T05:11:55Z" finished-at="2019-06-07T05:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.FlowOfTestNG -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
